<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">

        <!--配置Logger类-->
        <bean id="logger" class="com.itheima.utils.Logger"></bean>
        <!--IAccountService对象-->
        <bean id="IAccountService" class="com.itheima.service.impl.AccountServiceImpl"></bean>
        <!--
            连接点:普通方法。
            切入点:被增强的方法。
        -->
        <!--配置AOP-->
        <aop:config>
            <!--配置切面-->
            <aop:aspect id="logAdvice" ref="logger">
                <!--配置切入点表达式 id属性用于指定表达式的唯一标识。expression属性用于指定表达式内容
                   此标签写在aop:aspect标签内部只能当前切面使用。
                   他还可以写在aop:aspect外面，此时就变成了所有切面可用
               -->
                <aop:pointcut id="pt1" expression="execution(* com.itheima.service.impl.*.*(..))"></aop:pointcut>
                <!--配置通知的类型，并且建立通知方法和切入点方法的关联-->
                <!--前置通知:在切入点方法之前执行-->
               <!-- <aop:before method="beforePrintLog" pointcut-ref="pt1"></aop:before>-->
                <!--后置通知:在切入点方法执行之后执行，他和异常通知永远只能执行一个-->
              <!--  <aop:after-returning method="afterReturningPrintLog" pointcut-ref="pt1"></aop:after-returning>-->
                <!--异常通知:在切入点方法执行产生异常之后执行，他和后置通知永远只能执行一个-->
                <!--<aop:after-throwing method="afterThrowingPrintLog" pointcut-ref="pt1"></aop:after-throwing>-->
                <!--最终通知:无论切入点方法是否正常执行他都会在其执行完毕之后执行-->
               <!-- <aop:after method="afterPrintLog" pointcut-ref="pt1"></aop:after>-->
                <!--配置环绕通知 详细注释请看Logger类中-->
                <aop:around method="aroundPrintLog" pointcut-ref="pt1"></aop:around>
                </aop:aspect>
        </aop:config>
</beans>














